//
//  CardOnFileInteractor.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/27.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import FinanceEntity

// MARK: - CardOnFileInteractor

final class CardOnFileInteractor {
    var presenter: CardOnFilePresentationLogic?
    var router: CardOnFileRoutingLogic?
    weak var listener: CardOnFileListener?
    private let worker: CardOnFileWorkingLogic
    private let paymentMethods: [PaymentMethod]

    /// 자유롭게 매개변수 추가하기. worker, listener 등등  (Add parameters freely. worker, listener, etc)
    init(worker: CardOnFileWorkingLogic, paymentMethods: [PaymentMethod]) {
        self.worker = worker
        self.paymentMethods = paymentMethods
    }
}

// MARK: - CardOnFileRequestLogic

extension CardOnFileInteractor: CardOnFileRequestLogic {
    
    func process(_ request: CardOnFile.Request.OnLoad) {
        presenter?.present(.list(items: paymentMethods))
    }
    
    func process(_ request: CardOnFile.Request.OnItem) {
        if request.index < paymentMethods.count {
            listener?.listenToItemSelectedFromCardOnFile(at: request.index)
        } else {
            listener?.listenToAddPaymentMethodButtonTappedFromCardOnFile()
        }
    }
    
    func process(_ request: CardOnFile.Request.OnClose) {
        listener?.listenToCloseButtonTappedFromCardOnFile()
    }
    
}

// MARK: - CardOnFileRequestLogic definition

protocol CardOnFileRequestLogic {
    /// 외부매개변수는 제외하기
    func process(_ request: CardOnFile.Request.OnLoad)
    func process(_ request: CardOnFile.Request.OnItem)
    func process(_ request: CardOnFile.Request.OnClose)
}

// MARK: - CardOnFileWorkingLogic definition

protocol CardOnFileWorkingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
}

// MARK: - CardOnFilePresentationLogic definition

protocol CardOnFilePresentationLogic {
    /// 외부매개변수는 제외하기
    func present(_ response: CardOnFile.Response)
}

// MARK: - CardOnFileRoutingLogic definition

protocol CardOnFileRoutingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func routeToSomewhere()
}

// MARK: - CardOnFileListener

protocol CardOnFileListener: AnyObject {
    // TODO: Declare methods the interactor can invoke to communicate with other RIBs.
    func listenToCloseButtonTappedFromCardOnFile()
    func listenToItemSelectedFromCardOnFile(at index: Int)
    func listenToAddPaymentMethodButtonTappedFromCardOnFile()
}

