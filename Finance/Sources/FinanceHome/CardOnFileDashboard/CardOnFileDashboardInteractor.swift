//
//  CardOnFileDashboardInteractor.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/27.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

import Combine
import FinanceRepository

// MARK: - CardOnFileDashboardInteractor

final class CardOnFileDashboardInteractor {
    var presenter: CardOnFileDashboardPresentationLogic?
    var router: CardOnFileDashboardRoutingLogic?
    private let worker: CardOnFileDashboardWorkingLogic
    private var cancellables: Set<AnyCancellable>
    private let dependency: CardOnFileDashboardInteractorDependency
    private let listener: CardOnFileDashboardListener

    /// 자유롭게 매개변수 추가하기. worker, listener 등등  (Add parameters freely. worker, listener, etc)
    init(
        worker: CardOnFileDashboardWorkingLogic,
        listener: CardOnFileDashboardListener,
        dependency: CardOnFileDashboardInteractorDependency
    ) {
        self.worker = worker
        self.dependency = dependency
        self.cancellables = .init()
        self.listener = listener
    }
}

// MARK: - CardOnFileDashboardRequestLogic

extension CardOnFileDashboardInteractor: CardOnFileDashboardRequestLogic {
    func process(_ request: CardOnFileDashboard.Request.OnLoad) {
        dependency.cardOnFileRepository.cardOnFile.sink{[weak self] methods in
            /// 최대 5개 설정
            self?.presenter?.present(.list(items: Array(methods.prefix(5))))
        }.store(in: &cancellables)
    }
    
    func process(_ request: CardOnFileDashboard.Request.OnAdd) {
        listener.listenToAddPaymentMethodButtonPressed()
    }
}

// MARK: - CardOnFileDashboardRequestLogic definition

protocol CardOnFileDashboardRequestLogic {
    /// 외부매개변수는 제외하기
    func process(_ request: CardOnFileDashboard.Request.OnLoad)
    func process(_ request: CardOnFileDashboard.Request.OnAdd)
}

// MARK: - CardOnFileDashboardWorkingLogic definition

protocol CardOnFileDashboardWorkingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func doSomeWork()
}

// MARK: - CardOnFileDashboardPresentationLogic definition

protocol CardOnFileDashboardPresentationLogic {
    /// 외부매개변수는 제외하기
    func present(_ response: CardOnFileDashboard.Response)
}

// MARK: - CardOnFileDashboardRoutingLogic definition

protocol CardOnFileDashboardRoutingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
}

// MARK: - CardOnFileDashboardInteractorDependency

protocol CardOnFileDashboardInteractorDependency {
    var cardOnFileRepository: CardOnFileRepositoryAvailable { get }
}

// MARK: - CardOnFileDashboardListener

protocol CardOnFileDashboardListener: AnyObject {
    // TODO: Declare methods the interactor can invoke to communicate with other RIBs.
    func listenToAddPaymentMethodButtonPressed()
}
