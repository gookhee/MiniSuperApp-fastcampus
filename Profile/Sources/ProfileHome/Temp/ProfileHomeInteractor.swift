//
//  ProfileHomeInteractor.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/28.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

// MARK: - ProfileHomeInteractor

final class ProfileHomeInteractor {
    var presenter: ProfileHomePresentationLogic?
    var router: ProfileHomeRoutingLogic?
    private let worker: ProfileHomeWorkingLogic
    private weak var listener: ProfileHomeListener?

    /// 자유롭게 매개변수 추가하기. worker, listener 등등  (Add parameters freely. worker, listener, etc)
    init(
        worker: ProfileHomeWorkingLogic,
        listener: ProfileHomeListener?
    ) {
        self.worker = worker
        self.listener = listener
    }
}

// MARK: - ProfileHomeRequestLogic

extension ProfileHomeInteractor: ProfileHomeRequestLogic {
    
    func process(_ request: ProfileHome.Request.OnLoad) {

        worker.doSomeWork()
        
        presenter?.present(.something("response"))
    }
}

// MARK: - ProfileHomeRequestLogic definition

protocol ProfileHomeRequestLogic {
    /// 외부매개변수는 제외하기
    func process(_ request: ProfileHome.Request.OnLoad)
}

// MARK: - ProfileHomeWorkingLogic definition

protocol ProfileHomeWorkingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func doSomeWork()
}

// MARK: - ProfileHomePresentationLogic definition

protocol ProfileHomePresentationLogic {
    /// 외부매개변수는 제외하기
    func present(_ response: ProfileHome.Response)
}

// MARK: - ProfileHomeRoutingLogic definition

protocol ProfileHomeRoutingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func routeToSomewhere()
}

