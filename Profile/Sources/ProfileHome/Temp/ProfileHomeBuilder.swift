//
//  ProfileHomeBuilder.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/28.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

import CleanSwiftUtil

// MARK: - ProfileHomeBuilder

public final class ProfileHomeBuilder: Builder<ProfileHomeDependency> {

}

// MARK: - ProfileHomeBuildingLogic

extension ProfileHomeBuilder: ProfileHomeBuildingLogic {
    
    public func build(withListener listener: ProfileHomeListener) -> Destination {
        let _ = ProfileHomeComponent(dependency: dependency)
        let viewController = ProfileHomeViewController()
        let interactor = ProfileHomeInteractor(worker: ProfileHomeWorker(), listener: listener)
        let presenter = ProfileHomePresenter()
        let router = ProfileHomeRouter(viewController: viewController)
        viewController.interactor = interactor
        interactor.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController

        return viewController
    }

}

// MARK: - ProfileHomeBuildingLogic definition

public protocol ProfileHomeBuildingLogic {
    typealias Destination = UIViewController
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func build(withListener listener: ProfileHomeListener) -> Destination
}

// MARK: - ProfileHomeDependency

public protocol ProfileHomeDependency: CleanSwiftDependency {
    // TODO: Declare the set of dependencies required by this RIB, but cannot be
    // created by this RIB.
}

// MARK: - ProfileHomeComponent

final class ProfileHomeComponent: CleanSwiftComponent<ProfileHomeDependency> {

    // TODO: Declare 'fileprivate' dependencies that are only used by this RIB.
}

// MARK: - ProfileHomeListener

public protocol ProfileHomeListener: AnyObject {
    // TODO: Declare methods the interactor can invoke to communicate with other RIBs.
}
