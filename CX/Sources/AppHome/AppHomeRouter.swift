//
//  AppHomeRouter.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/28.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

import SuperUI
import TransportHome
import UIKit

// MARK: - AppHomeRouter

final class AppHomeRouter: NSObject {
    weak var viewController: UIViewController?
    private let transportHomeBuildable: TransportHomeBuildingLogic
    private var transportHomeRouting: UIViewController?
    private let transitioningDelegate: PushModalPresentationController
    
    /// 자유롭게 다른 scene builder 추가하기 (Freely add builders of different scenes)
    init(
        viewController: UIViewController,
        transportHomeBuildable: TransportHomeBuildingLogic
    ) {
        self.viewController = viewController
        self.transportHomeBuildable = transportHomeBuildable
        self.transitioningDelegate = PushModalPresentationController()
    }
}

// MARK: - AppHomeRoutingLogic

extension AppHomeRouter: AppHomeRoutingLogic {
    func attachTransportHome(listener: TransportHomeListener) {
        if transportHomeRouting != nil {
            return
        }
        
        let destination = transportHomeBuildable.build(withListener: listener)
        presentWithPushTransition(destination, animated: true)
        self.transportHomeRouting = destination
    }
    
    func detachTransportHome() {
        guard nil != transportHomeRouting else {
            return
        }
        
        viewController?.dismiss(animated: true)
        self.transportHomeRouting = nil
    }
}

// MARK: - private

extension AppHomeRouter {
    private func presentWithPushTransition(_ viewControllable: UIViewController, animated: Bool) {
        viewControllable.modalPresentationStyle = .custom
        viewControllable.transitioningDelegate = transitioningDelegate
        viewController?.present(viewControllable, animated: true, completion: nil)
    }
}
