//
//  AppHomeInteractor.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/28.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

import TransportHome

// MARK: - AppHomeInteractor

final class AppHomeInteractor {
    var presenter: AppHomePresentationLogic?
    var router: AppHomeRoutingLogic?
    private let worker: AppHomeWorkingLogic
    private weak var listener: AppHomeListener?

    /// 자유롭게 매개변수 추가하기. worker, listener 등등  (Add parameters freely. worker, listener, etc)
    init(
        worker: AppHomeWorkingLogic,
        listener: AppHomeListener?
    ) {
        self.worker = worker
    }
}

// MARK: - AppHomeRequestLogic

extension AppHomeInteractor: AppHomeRequestLogic {
    func process(_ request: AppHome.Request.OnLoad) {
        presenter?.present(.list([.car, .cart]))
    }
    
    func process(_ request: AppHome.Request.OnWidget) {
        switch request.kind {
        case .car:
            router?.attachTransportHome(listener: self)
        case .cart:
            break
        }
    }
}

// MARK: - TransportHomeListener

extension AppHomeInteractor: TransportHomeListener {
    func transportHomeDidTapClose() {
        router?.detachTransportHome()
    }
}

// MARK: - AppHomeRequestLogic definition

protocol AppHomeRequestLogic {
    /// 외부매개변수는 제외하기
    func process(_ request: AppHome.Request.OnLoad)
    func process(_ request: AppHome.Request.OnWidget)
}

// MARK: - AppHomeWorkingLogic definition

protocol AppHomeWorkingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func doSomeWork()
}

// MARK: - AppHomePresentationLogic definition

protocol AppHomePresentationLogic {
    /// 외부매개변수는 제외하기
    func present(_ response: AppHome.Response)
}

// MARK: - AppHomeRoutingLogic definition

protocol AppHomeRoutingLogic {
    /// 자유롭게 매개변수 추가하기 (Add parameters freely)
    func attachTransportHome(listener: TransportHomeListener)
    func detachTransportHome()
}

// MARK: - AppHomeListener

public protocol AppHomeListener: AnyObject {
}
 
// MARK: - WidgetKind

enum WidgetKind {
    case car
    case cart
}
