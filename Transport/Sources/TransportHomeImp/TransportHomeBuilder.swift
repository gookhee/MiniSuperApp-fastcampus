//
//  TransportHomeBuilder.swift
//  MiniSuperApp
//
//  Created by 정국희 on 2022/03/28.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

import CombineUtil
import FinanceRepository
import Topup
import TransportHome
import CleanSwiftUtil
import NeedleFoundation

// MARK: - TransportHomeBuilder

public final class TransportHomeBuilder: Component<TransportHomeDependency>, TransportHomeInteractorDependency {
    var superPayBalance: ReadOnlyCurrentValuePublisher<Double> { dependency.superPayRepository.balance }
}

// MARK: - TransportHomeBuildingLogic

extension TransportHomeBuilder: TransportHomeBuildingLogic {
    public func build(withListener listener: TransportHomeListener) -> Destination {
        let viewController = TransportHomeViewController()
        let interactor = TransportHomeInteractor(
            worker: TransportHomeWorker(),
            dependency: self,
            listener: listener
        )
        let presenter = TransportHomePresenter()
        let router = TransportHomeRouter(
            viewController: viewController,
            topupBuildable: dependency.topupBuildable
        )
        viewController.interactor = interactor
        interactor.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController

        return viewController
    }
}

// MARK: - TransportHomeDependency

public protocol TransportHomeDependency: Dependency {
    var superPayRepository: SuperPayRepositoryAvailable { get }
    var cardOnFileRepository: CardOnFileRepositoryAvailable { get }
    var topupBuildable: TopupBuildingLogic { get }
}
